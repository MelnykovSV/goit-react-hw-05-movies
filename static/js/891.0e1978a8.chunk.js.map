{"version":3,"file":"static/js/891.0e1978a8.chunk.js","mappings":"kTAEMA,EAAO,gCACPC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,kGAEoBC,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,GAHJ,sCAKGC,EAAY,CAAEC,OAAQ,KAAMF,SAASE,OAAQC,KAAM,KAAMC,SACzD,IAAIC,MAAMC,KAAKC,UAAUN,IAN5B,gFAUA,SAAeO,IAAtB,4CAAO,OAAP,oBAAO,uGACEX,EAAQ,GAAD,OAAIF,EAAJ,oCAAoCC,EAApC,aADT,kEAIA,SAASa,EAAiBX,GAC/B,OAAOD,EAAQ,GAAD,OAAIF,EAAJ,gCAAgCC,EAAhC,kBAA6CE,EAA7C,WACf,CAEM,SAASY,EAAaC,GAC3B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,oBAAoCf,GACnD,CAEM,SAASgB,EAAaD,GAC3B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,4BAA4Cf,GAC3D,CAEM,SAASiB,EAAgBF,GAC9B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,4BAA4Cf,GAC3D,C,4EC/BYkB,E,QAAYC,EAAAA,IAAH,6D,mBCgBtB,EAZkB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aACnB,OACE,UAACF,EAAD,YACE,mCACA,gEACqC,SAAC,KAAD,CAAMG,GAAG,IAAT,uBAA8B,QAEnE,uBAAID,MAGT,C,8GCbYF,EAAYC,EAAAA,EAAAA,GAAH,6UAWPG,EAAAA,EAAAA,KAAAA,QAEaA,EAAAA,EAAAA,KAAAA,GAAAA,O,SCZfC,EAAY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,GAC1B,OACE,yBACE,SAAC,KAAD,CAAMT,GAAE,kBAAaS,GAAMC,MAAO,CAAEC,KAAMP,GAA1C,SACGG,GAASC,KAFLC,EAMZ,KAGN,C,oIClBYZ,E,QAAYC,EAAAA,IAAH,+D,iBCsDtB,EA/Ca,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,WAArC,eAAO3B,EAAP,KAAe4B,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAiB,CAAE3B,OAAQ,KAAMC,KAAM,KAAjE,eAAO4B,EAAP,KAAcC,EAAd,KACA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAea,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACR1B,EAAAA,EAAAA,MACG2B,MAAK,SAAAnC,GACJiC,EAAUjC,EAASoC,KAAKC,SACxBP,EAAU,WACX,IACAQ,OAAM,SAACP,GACNC,EAAS1B,KAAKiC,MAAMR,EAAM3B,UAC1B0B,EAAU,WACX,GACJ,GAAE,IAEY,aAAX5B,GACK,SAACsC,EAAA,EAAD,CAAWxB,aAAce,EAAM5B,OAEzB,YAAXD,GAEA,4BACE,4CAEA,SAAC,KAAD,CACEuC,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,SAAS,OAKF,aAAX7C,GAEA,UAACY,EAAD,YACE,4CACA,SAACK,EAAA,EAAD,CAAWC,OAAQA,YAJzB,CAQD,C","sources":["api.ts","components/ErrorPage/ErrorPage.styled.tsx","components/ErrorPage/ErrorPage.tsx","components/FilmsList/FilmsList.styled.tsx","components/FilmsList/FilmsList.tsx","pages/Home/Home.styled.tsx","pages/Home/Home.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = 'f5947bee69b0eabce6ba631e79612468';\n\nexport async function getData(query: string) {\n  try {\n    const response = await axios.get(query);\n    return response;\n  } catch (error: any) {\n    const errorData = { status: error.response.status, body: error.message };\n    throw new Error(JSON.stringify(errorData));\n  }\n}\n\nexport async function getTrendedMovies() {\n  return getData(`${BASE}trending/all/day?api_key=${KEY}&page=1`);\n}\n\nexport function getMoviesByQuery(query: string) {\n  return getData(`${BASE}search/movie?api_key=${KEY}&query=${query}&page=1`);\n}\n\nexport function getMovieData(movieID: string) {\n  return getData(`${BASE}movie/${movieID}?api_key=${KEY}`);\n}\n\nexport function getMovieCast(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/reviews?api_key=${KEY}`);\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  a {\n    width: fit-content;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './ErrorPage.styled';\nimport { Link } from 'react-router-dom';\nimport { IErrorPageProps } from '../../interfaces';\n\nconst ErrorPage = ({ errorMessage }: IErrorPageProps) => {\n  return (\n    <Container>\n      <h1>ERROR</h1>\n      <p>\n        Something happened. Go back to the <Link to=\"/\">Home page</Link>{' '}\n      </p>\n      <p>{errorMessage}</p>\n    </Container>\n  );\n};\n\nexport default ErrorPage;\n","import styled from '@emotion/styled';\nimport { colors } from '../../constants';\n\nexport const Container = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  li {\n    a {\n      transition: background-color 0.3s linear;\n      display: block;\n      border-radius: 5px;\n      padding: 5px;\n      width: fit-content;\n      color: ${colors.text.primary};\n      :hover {\n        background-color: ${colors.link.bg.hover};\n      }\n    }\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container } from './FilmsList.styled';\nimport { IFilmsListItem, IFilmsListProps } from '../../interfaces';\n\nexport const FilmsList = ({ movies }: IFilmsListProps) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ title, name, id }: IFilmsListItem) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </Link>\n          </li>\n        );\n      })}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  h1 {\n    margin-bottom: 20px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { FilmsList } from '../../components/FilmsList/FilmsList';\nimport { getTrendedMovies } from '../../api';\n\nimport { Watch } from 'react-loader-spinner';\nimport { Container } from './Home.styled';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\nimport { IError } from '../../interfaces';\n\nconst Home = () => {\n  const [status, setStatus] = useState('pending');\n  const [error, setError] = useState<IError>({ status: null, body: '' });\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendedMovies()\n      .then(response => {\n        setMovies(response.data.results);\n        setStatus('resolved');\n      })\n      .catch((error: Error) => {\n        setError(JSON.parse(error.message));\n        setStatus('rejected');\n      });\n  }, []);\n\n  if (status === 'rejected') {\n    return <ErrorPage errorMessage={error.body} />;\n  }\n  if (status === 'pending') {\n    return (\n      <div>\n        <h1>Trending today</h1>\n\n        <Watch\n          height=\"80\"\n          width=\"80\"\n          radius=\"48\"\n          color=\"#4fa94d\"\n          ariaLabel=\"watch-loading\"\n          wrapperStyle={{}}\n          visible={true}\n        />\n      </div>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <Container>\n        <h1>Trending today</h1>\n        <FilmsList movies={movies}></FilmsList>\n      </Container>\n    );\n  }\n};\n\nexport default Home as React.ComponentType;\n"],"names":["BASE","KEY","getData","query","axios","response","errorData","status","body","message","Error","JSON","stringify","getTrendedMovies","getMoviesByQuery","getMovieData","movieID","getMovieCast","getMovieReviews","Container","styled","errorMessage","to","colors","FilmsList","movies","location","useLocation","map","title","name","id","state","from","useState","setStatus","error","setError","setMovies","useEffect","then","data","results","catch","parse","ErrorPage","height","width","radius","color","ariaLabel","wrapperStyle","visible"],"sourceRoot":""}