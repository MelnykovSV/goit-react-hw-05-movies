{"version":3,"file":"static/js/63.f426474a.chunk.js","mappings":"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","sources":["api.ts","components/ErrorPage/ErrorPage.styled.tsx","components/ErrorPage/ErrorPage.tsx","pages/Movie/Movie.styled.tsx","pages/Movie/Movie.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = 'f5947bee69b0eabce6ba631e79612468';\n\nexport async function getData(query: string) {\n  try {\n    const response = await axios.get(query);\n    return response;\n  } catch (error: any) {\n    console.log(error.message);\n    throw new Error(error.message);\n  }\n}\n\nexport async function getTrendedMovies() {\n  return getData(`${BASE}trending/all/day?api_key=${KEY}&page=1`);\n}\n\nexport function getMoviesByQuery(query: string) {\n  return getData(`${BASE}search/movie?api_key=${KEY}&query=${query}&page=1`);\n}\n\nexport function getMovieData(movieID: string) {\n  return getData(`${BASE}movie/${movieID}?api_key=${KEY}`);\n}\n\nexport function getMovieCast(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/reviews?api_key=${KEY}`);\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  a {\n    width: fit-content;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './ErrorPage.styled';\nimport { Link } from 'react-router-dom';\nimport { IErrorPageProps } from '../../interfaces';\n\nconst ErrorPage = ({ errorMessage }: IErrorPageProps) => {\n  return (\n    <Container>\n      <h1>ERROR</h1>\n      <p>\n        Something happened. Go back to the <Link to=\"/\">Home page</Link>{' '}\n      </p>\n      <p>{errorMessage}</p>\n    </Container>\n  );\n};\n\nexport default ErrorPage;\n","import styled from '@emotion/styled';\nimport { colors } from '../../constants';\n\nexport const Container = styled.div`\n  a {\n    display: block;\n    color: ${colors.link.primary};\n    background-color: ${colors.bg.primary};\n    width: fit-content;\n\n    padding: 5px 10px;\n    border-radius: 5px;\n    transition: background-color 0.3s linear;\n    &:hover {\n      background-color: ${colors.link.bg.hover};\n    }\n    &.active {\n      background-color: ${colors.link.bg.active};\n    }\n  }\n  nav {\n    ul {\n      display: flex;\n      gap: 20px;\n    }\n  }\n`;\n","import React, { useState, useEffect, Suspense, useRef } from 'react';\nimport { Outlet, Link, useLocation, NavLink } from 'react-router-dom';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\n\nimport { getMovieData } from '../../api';\n\nimport { useParams } from 'react-router-dom';\nimport placeholderPoster from './../../images/placeholder-poster.jpg';\nimport { Watch } from 'react-loader-spinner';\n\nimport { IMovie, IError } from '../../interfaces';\nimport { Container } from './Movie.styled';\n\nconst Movie = () => {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('pending');\n  const [error, setError] = useState('');\n  const [movie, setMovie] = useState<IMovie>();\n\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (movieId) {\n      getMovieData(movieId)\n        .then(response => {\n          setMovie(response.data);\n          setStatus('resolved');\n        })\n        .catch((error: IError) => {\n          setError(error.status_message);\n          setStatus('rejected');\n        });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (status === 'pending') {\n    return (\n      <Watch\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"#4fa94d\"\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{}}\n        visible={true}\n      />\n    );\n  }\n  if (status === 'rejected') {\n    return <ErrorPage errorMessage={error} />;\n  }\n  if (status === 'resolved') {\n    if (movie) {\n      return (\n        <Container>\n          <Link to={backLinkHref.current}>Go back</Link>\n          <h2>{movie?.title || movie?.name}</h2>\n\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                : placeholderPoster\n            }\n            alt={movie?.title || movie?.name}\n          />\n\n          <p>User Score: {movie.vote_average.toFixed(1)}</p>\n          <div>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </div>\n\n          <div>\n            <h3>Genres</h3>\n            <ul>\n              {movie.genres.map(item => {\n                return <li key={item.name}>{item.name}</li>;\n              })}\n            </ul>\n          </div>\n          <nav>\n            <ul>\n              <li>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n              </li>\n            </ul>\n          </nav>\n          <Suspense\n            fallback={\n              <Watch\n                height=\"80\"\n                width=\"80\"\n                radius=\"48\"\n                color=\"#4fa94d\"\n                ariaLabel=\"watch-loading\"\n                wrapperStyle={{}}\n                visible={true}\n              />\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </Container>\n      );\n    } else {\n      //some default movie data\n    }\n  }\n};\n\nexport default Movie as React.ComponentType;\n"],"names":["BASE","KEY","getData","query","axios","response","console","log","message","Error","getTrendedMovies","getMoviesByQuery","getMovieData","movieID","getMovieCast","getMovieReviews","Container","styled","errorMessage","to","colors","movieId","useParams","useState","status","setStatus","error","setError","movie","setMovie","location","useLocation","backLinkHref","useRef","state","from","useEffect","then","data","catch","status_message","height","width","radius","color","ariaLabel","wrapperStyle","visible","ErrorPage","current","title","name","src","poster_path","placeholderPoster","alt","vote_average","toFixed","overview","genres","map","item","Suspense","fallback"],"sourceRoot":""}