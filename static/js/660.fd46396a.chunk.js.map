{"version":3,"file":"static/js/660.fd46396a.chunk.js","mappings":"kTAEMA,EAAO,gCACPC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,gGAEoBC,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,GAHJ,sCAKHC,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMD,SANnB,gFAUA,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,uGACER,EAAQ,GAAD,OAAIF,EAAJ,oCAAoCC,EAApC,aADT,kEAIA,SAASU,EAAiBR,GAC/B,OAAOD,EAAQ,GAAD,OAAIF,EAAJ,gCAAgCC,EAAhC,kBAA6CE,EAA7C,WACf,CAEM,SAASS,EAAaC,GAC3B,OAAOX,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBa,EAAjB,oBAAoCZ,GACnD,CAEM,SAASa,EAAaD,GAC3B,OAAOX,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBa,EAAjB,4BAA4CZ,GAC3D,CAEM,SAASc,EAAgBF,GAC9B,OAAOX,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBa,EAAjB,4BAA4CZ,GAC3D,C,0FC/BYe,E,QAAYC,EAAAA,GAAH,qE,SCETC,EAAY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,GAC1B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGG,GAASC,KAFLC,EAMZ,KAGN,C,6HClBYT,EAAYC,EAAAA,EAAAA,IAAH,qDCATD,EAAYC,EAAAA,EAAAA,IAAH,0D,SCCTY,EAAY,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,wBAC1B,OACE,SAAC,EAAD,WACE,kBAAMC,SAAUD,EAAhB,WACE,kBAAOE,KAAK,OAAOR,KAAK,iBACxB,mBAAQQ,KAAK,SAAb,wBAIP,E,6BCkED,EAtEe,WACb,OAA6CC,EAAAA,EAAAA,IAAgB,IAA7D,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,WAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAeoB,EAAf,KAEMT,EAA0B,SAACU,GAC/BA,EAAEC,iBAEF,IAAMC,EAASF,EAAEE,OAIXC,EAAeD,EAAOE,YAAYC,MAAMC,OAC1CH,IACFR,EAAgB,CAAEhC,MAAOwC,IACzBD,EAAOE,YAAYC,MAAQ,GAE9B,EASD,OAPAE,EAAAA,EAAAA,YAAU,YACRpC,EAAAA,EAAAA,IAAiBuB,EAAac,IAAI,UAAUC,MAAK,SAAA5C,GAC/CkC,EAAUlC,EAAS6C,KAAKC,SACxBb,EAAU,WACX,GACF,GAAE,CAACJ,IAECA,EAAac,IAAI,SAUL,YAAXX,GAEA,UAACrB,EAAD,YACE,SAACa,EAAD,CACEgB,MAAOX,EAAac,IAAI,SACxBlB,wBAAyBA,KAE3B,SAAC,KAAD,CACEsB,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,SAAS,OAMF,aAAXrB,GAEA,UAACrB,EAAD,YACE,SAACa,EAAD,CACEgB,MAAOX,EAAac,IAAI,SACxBlB,wBAAyBA,KAE3B,SAACZ,EAAA,EAAD,CAAWC,OAAQA,YAPzB,GA5BE,SAACH,EAAD,WACE,SAACa,EAAD,CACEgB,MAAOX,EAAac,IAAI,SACxBlB,wBAAyBA,KAqClC,C","sources":["api.ts","components/FilmsList/FilmsList.styled.tsx","components/FilmsList/FilmsList.tsx","pages/Movies/Movies.styled.tsx","components/Searchbar/Searchbar.styled.tsx","components/Searchbar/Searchbar.tsx","pages/Movies/Movies.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = 'f5947bee69b0eabce6ba631e79612468';\n\nexport async function getData(query: string) {\n  try {\n    const response = await axios.get(query);\n    return response;\n  } catch (error: any) {\n    console.log(error.message);\n    throw new Error(error.message);\n  }\n}\n\nexport async function getTrendedMovies() {\n  return getData(`${BASE}trending/all/day?api_key=${KEY}&page=1`);\n}\n\nexport function getMoviesByQuery(query: string) {\n  return getData(`${BASE}search/movie?api_key=${KEY}&query=${query}&page=1`);\n}\n\nexport function getMovieData(movieID: string) {\n  return getData(`${BASE}movie/${movieID}?api_key=${KEY}`);\n}\n\nexport function getMovieCast(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/reviews?api_key=${KEY}`);\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.ul`\n  color: white;\n  background-color: green;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container } from './FilmsList.styled';\nimport { IFilmsListItem, IFilmsListProps } from '../../interfaces';\n\nexport const FilmsList = ({ movies }: IFilmsListProps) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ title, name, id }: IFilmsListItem) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </Link>\n          </li>\n        );\n      })}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background-color: yellow;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background-color: yellowgreen;\n`;\n","import { Container } from './Searchbar.styled';\n// import { ISearchbarProps } from '../../interfaces';\n\nexport const Searchbar = ({ searchFormSubmitHandler }: any) => {\n  return (\n    <Container>\n      <form onSubmit={searchFormSubmitHandler}>\n        <input type=\"text\" name=\"searchQuery\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </Container>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Container } from './Movies.styled';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\nimport { FilmsList } from '../../components/FilmsList/FilmsList';\nimport { getMoviesByQuery } from '../../api';\nimport { Watch } from 'react-loader-spinner';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams]: any = useSearchParams('');\n  const [status, setStatus] = useState('pending');\n  const [movies, setMovies] = useState([]);\n\n  const searchFormSubmitHandler = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    const target = e.target as typeof e.target & {\n      searchQuery: { value: string };\n    };\n\n    const trimmedQuery = target.searchQuery.value.trim();\n    if (trimmedQuery) {\n      setSearchParams({ query: trimmedQuery });\n      target.searchQuery.value = '';\n    }\n  };\n\n  useEffect(() => {\n    getMoviesByQuery(searchParams.get('query')).then(response => {\n      setMovies(response.data.results);\n      setStatus('resolved');\n    });\n  }, [searchParams]);\n\n  if (!searchParams.get('query')) {\n    return (\n      <Container>\n        <Searchbar\n          value={searchParams.get('query')}\n          searchFormSubmitHandler={searchFormSubmitHandler}\n        ></Searchbar>\n      </Container>\n    );\n  } else {\n    if (status === 'pending') {\n      return (\n        <Container>\n          <Searchbar\n            value={searchParams.get('query')}\n            searchFormSubmitHandler={searchFormSubmitHandler}\n          ></Searchbar>\n          <Watch\n            height=\"80\"\n            width=\"80\"\n            radius=\"48\"\n            color=\"#4fa94d\"\n            ariaLabel=\"watch-loading\"\n            wrapperStyle={{}}\n            visible={true}\n          />\n        </Container>\n      );\n    }\n\n    if (status === 'resolved') {\n      return (\n        <Container>\n          <Searchbar\n            value={searchParams.get('query')}\n            searchFormSubmitHandler={searchFormSubmitHandler}\n          ></Searchbar>\n          <FilmsList movies={movies}></FilmsList>\n        </Container>\n      );\n    }\n  }\n};\n\nexport default Movies;\n"],"names":["BASE","KEY","getData","query","axios","response","console","log","message","Error","getTrendedMovies","getMoviesByQuery","getMovieData","movieID","getMovieCast","getMovieReviews","Container","styled","FilmsList","movies","location","useLocation","map","title","name","id","to","state","from","Searchbar","searchFormSubmitHandler","onSubmit","type","useSearchParams","searchParams","setSearchParams","useState","status","setStatus","setMovies","e","preventDefault","target","trimmedQuery","searchQuery","value","trim","useEffect","get","then","data","results","height","width","radius","color","ariaLabel","wrapperStyle","visible"],"sourceRoot":""}