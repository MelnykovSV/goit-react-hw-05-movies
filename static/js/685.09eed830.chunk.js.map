{"version":3,"file":"static/js/685.09eed830.chunk.js","mappings":"kTAEMA,EAAO,gCACPC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,gGAEoBC,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAGIA,GAHJ,sCAKHC,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMD,SANnB,gFAUA,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,uGACER,EAAQ,GAAD,OAAIF,EAAJ,oCAAoCC,EAApC,aADT,kEAIA,SAASU,EAAiBR,GAC/B,OAAOD,EAAQ,GAAD,OAAIF,EAAJ,gCAAgCC,EAAhC,kBAA6CE,EAA7C,WACf,CAEM,SAASS,EAAaC,GAC3B,OAAOX,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBa,EAAjB,oBAAoCZ,GACnD,CAEM,SAASa,EAAaD,GAC3B,OAAOX,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBa,EAAjB,4BAA4CZ,GAC3D,CAEM,SAASc,EAAgBF,GAC9B,OAAOX,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBa,EAAjB,4BAA4CZ,GAC3D,C,4EC/BYe,E,QAAYC,EAAAA,IAAH,6D,mBCgBtB,EAZkB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aACnB,OACE,UAACF,EAAD,YACE,mCACA,gEACqC,SAAC,KAAD,CAAMG,GAAG,IAAT,uBAA8B,QAEnE,uBAAID,MAGT,C,uGCdYF,E,QAAYC,EAAAA,IAAH,sB,8CCoFtB,EAzEa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,WAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACJT,IACFN,EAAAA,EAAAA,IAAaM,GACVU,MAAK,SAAAzB,GACJuB,EAAQvB,EAAS0B,KAAKJ,MAEtBH,EAAU,WACX,IACAQ,OAAM,SAACP,GACNC,EAASD,EAAMQ,gBACfT,EAAU,WACX,GAIN,GAAE,IACY,aAAXD,GACK,SAACW,EAAA,EAAD,CAAWhB,aAAcO,IAEnB,YAAXF,GAEA,SAAC,KAAD,CACEY,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,SAAS,IAIA,aAAXlB,EACGI,EAAKe,QAQR,UAAC1B,EAAD,YACE,kCACA,wBACGW,EAAKgB,KAAI,SAACC,GACT,OACE,2BACE,gBACEC,IACED,EAAKE,aAAL,0CACuCF,EAAKE,c,8sDAG9CC,IAAKH,EAAKI,MAAQ,mBAEpB,uBAAIJ,EAAKI,MAAQ,mBACjB,uCAAeJ,EAAKK,WAAa,+BAGtC,UAxBH,0BACE,kDAJR,CAgCD,C","sources":["api.ts","components/ErrorPage/ErrorPage.styled.tsx","components/ErrorPage/ErrorPage.tsx","pages/Cast/Cast.styled.tsx","pages/Cast/Cast.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = 'f5947bee69b0eabce6ba631e79612468';\n\nexport async function getData(query: string) {\n  try {\n    const response = await axios.get(query);\n    return response;\n  } catch (error: any) {\n    console.log(error.message);\n    throw new Error(error.message);\n  }\n}\n\nexport async function getTrendedMovies() {\n  return getData(`${BASE}trending/all/day?api_key=${KEY}&page=1`);\n}\n\nexport function getMoviesByQuery(query: string) {\n  return getData(`${BASE}search/movie?api_key=${KEY}&query=${query}&page=1`);\n}\n\nexport function getMovieData(movieID: string) {\n  return getData(`${BASE}movie/${movieID}?api_key=${KEY}`);\n}\n\nexport function getMovieCast(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/reviews?api_key=${KEY}`);\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  a {\n    width: fit-content;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './ErrorPage.styled';\nimport { Link } from 'react-router-dom';\nimport { IErrorPageProps } from '../../interfaces';\n\nconst ErrorPage = ({ errorMessage }: IErrorPageProps) => {\n  return (\n    <Container>\n      <h1>ERROR</h1>\n      <p>\n        Something happened. Go back to the <Link to=\"/\">Home page</Link>{' '}\n      </p>\n      <p>{errorMessage}</p>\n    </Container>\n  );\n};\n\nexport default ErrorPage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import React, { useEffect, useState } from 'react';\n\nimport { Container } from './Cast.styled';\nimport { useParams } from 'react-router';\nimport { getMovieCast } from '../../api';\nimport { Watch } from 'react-loader-spinner';\n\nimport placeholderImage from './../../images/placeholder-photo.jpg';\n\nimport { ICastItem, IError } from '../../interfaces';\n\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [status, setStatus] = useState('pending');\n  const [error, setError] = useState('');\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (movieId) {\n      getMovieCast(movieId)\n        .then(response => {\n          setCast(response.data.cast);\n\n          setStatus('resolved');\n        })\n        .catch((error: IError) => {\n          setError(error.status_message);\n          setStatus('rejected');\n        });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (status === 'rejected') {\n    return <ErrorPage errorMessage={error} />;\n  }\n  if (status === 'pending') {\n    return (\n      <Watch\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"#4fa94d\"\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{}}\n        visible={true}\n      />\n    );\n  }\n  if (status === 'resolved') {\n    if (!cast.length) {\n      return (\n        <div>\n          <div>No cast found</div>\n        </div>\n      );\n    }\n    return (\n      <Container>\n        <h2>CAST</h2>\n        <ul>\n          {cast.map((item: ICastItem) => {\n            return (\n              <li>\n                <img\n                  src={\n                    item.profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${item.profile_path}`\n                      : placeholderImage\n                  }\n                  alt={item.name || 'No name found'}\n                />\n                <p>{item.name || 'No name found'}</p>\n                <p>Character: {item.character || 'No character name found'}</p>\n              </li>\n            );\n          })}\n        </ul>\n      </Container>\n    );\n  }\n};\n\nexport default Cast as React.ComponentType;\n"],"names":["BASE","KEY","getData","query","axios","response","console","log","message","Error","getTrendedMovies","getMoviesByQuery","getMovieData","movieID","getMovieCast","getMovieReviews","Container","styled","errorMessage","to","movieId","useParams","useState","status","setStatus","error","setError","cast","setCast","useEffect","then","data","catch","status_message","ErrorPage","height","width","radius","color","ariaLabel","wrapperStyle","visible","length","map","item","src","profile_path","alt","name","character"],"sourceRoot":""}