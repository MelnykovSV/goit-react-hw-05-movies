{"version":3,"file":"static/js/955.30e15c2b.chunk.js","mappings":"kTAEMA,EAAO,gCACPC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,uFACkBC,EAAAA,EAAAA,IAChBD,GACJE,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GAEL,MADAC,QAAQC,IAAIF,EAAMG,SACZ,IAAIC,MAAMJ,EAAMG,QACvB,IATE,cACCL,EADD,yBAUEA,GAVF,kEAaA,SAAeO,IAAtB,4CAAO,OAAP,oBAAO,oGACkBX,EAAQ,GAAD,OACzBF,EADyB,oCACOC,EADP,YADzB,cACCK,EADD,yBAKEA,GALF,kEAQA,SAASQ,EAAiBX,GAC/B,OAAOD,EAAQ,GAAD,OAAIF,EAAJ,gCAAgCC,EAAhC,kBAA6CE,EAA7C,WACf,CAEM,SAASY,EAAaC,GAC3B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,oBAAoCf,GACnD,CAEM,SAASgB,EAAaD,GAC3B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,4BAA4Cf,GAC3D,CAEM,SAASiB,EAAgBF,GAC9B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,4BAA4Cf,GAC3D,C,uGCtCYkB,E,QAAYC,EAAAA,IAAH,sB,sCCqEtB,EA9Da,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,WAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAaI,GAAShB,MAAK,SAAAC,GACzBqB,EAAQrB,EAASuB,KAAKH,MAEtBD,EAAU,WACX,GAEF,GAAE,IAEY,YAAXD,GAEA,SAAC,KAAD,CACEM,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,SAAS,IAIA,aAAXZ,EACGE,EAAKW,QAQR,UAAClB,EAAD,YACE,kCACA,wBACGO,EAAKY,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IACED,EAAKE,aAAL,0CACuCF,EAAKE,c,8sDAG9CC,IAAKH,EAAKI,MAAQ,mBAEpB,uBAAIJ,EAAKI,MAAQ,mBACjB,uCAAeJ,EAAKK,WAAa,+BAGtC,UAxBH,0BACE,kDAJR,CAgCD,C","sources":["api.ts","pages/Cast/Cast.styled.tsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = 'f5947bee69b0eabce6ba631e79612468';\n\nexport async function getData(query: string) {\n  const response = await axios\n    .get(query)\n    .then(response => {\n      return response;\n    })\n    .catch(error => {\n      console.log(error.message);\n      throw new Error(error.message);\n    });\n  return response;\n}\n\nexport async function getTrendedMovies() {\n  const response = await getData(\n    `${BASE}trending/all/day?api_key=${KEY}&page=1`\n  );\n\n  return response;\n}\n\nexport function getMoviesByQuery(query: string) {\n  return getData(`${BASE}search/movie?api_key=${KEY}&query=${query}&page=1`);\n}\n\nexport function getMovieData(movieID: string) {\n  return getData(`${BASE}movie/${movieID}?api_key=${KEY}`);\n}\n\nexport function getMovieCast(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/reviews?api_key=${KEY}`);\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import React, { useEffect, useState } from 'react';\n\nimport { Container } from './Cast.styled';\nimport { useParams } from 'react-router';\nimport { getMovieCast } from '../../api';\nimport { Watch } from 'react-loader-spinner';\n\nimport placeholderImage from './../../images/placeholder-photo.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [status, setStatus] = useState('pending');\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCast(movieId).then(response => {\n      setCast(response.data.cast);\n\n      setStatus('resolved');\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (status === 'pending') {\n    return (\n      <Watch\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"#4fa94d\"\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{}}\n        visible={true}\n      />\n    );\n  }\n  if (status === 'resolved') {\n    if (!cast.length) {\n      return (\n        <div>\n          <div>No cast found</div>\n        </div>\n      );\n    }\n    return (\n      <Container>\n        <h2>CAST</h2>\n        <ul>\n          {cast.map(item => {\n            return (\n              <li>\n                <img\n                  src={\n                    item.profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${item.profile_path}`\n                      : placeholderImage\n                  }\n                  alt={item.name || 'No name found'}\n                />\n                <p>{item.name || 'No name found'}</p>\n                <p>Character: {item.character || 'No character name found'}</p>\n              </li>\n            );\n          })}\n        </ul>\n      </Container>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["BASE","KEY","getData","query","axios","then","response","catch","error","console","log","message","Error","getTrendedMovies","getMoviesByQuery","getMovieData","movieID","getMovieCast","getMovieReviews","Container","styled","movieId","useParams","useState","status","setStatus","cast","setCast","useEffect","data","height","width","radius","color","ariaLabel","wrapperStyle","visible","length","map","item","src","profile_path","alt","name","character"],"sourceRoot":""}