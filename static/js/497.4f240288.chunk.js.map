{"version":3,"file":"static/js/497.4f240288.chunk.js","mappings":"kTAEMA,EAAO,gCACPC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,uFACkBC,EAAAA,EAAAA,IAChBD,GACJE,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GAEL,MADAC,QAAQC,IAAIF,EAAMG,SACZ,IAAIC,MAAMJ,EAAMG,QACvB,IATE,cACCL,EADD,yBAUEA,GAVF,kEAaA,SAAeO,IAAtB,4CAAO,OAAP,oBAAO,oGACkBX,EAAQ,GAAD,OACzBF,EADyB,oCACOC,EADP,YADzB,cACCK,EADD,yBAKEA,GALF,kEAQA,SAASQ,EAAiBX,GAC/B,OAAOD,EAAQ,GAAD,OAAIF,EAAJ,gCAAgCC,EAAhC,kBAA6CE,EAA7C,WACf,CAEM,SAASY,EAAaC,GAC3B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,oBAAoCf,GACnD,CAEM,SAASgB,EAAaD,GAC3B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,4BAA4Cf,GAC3D,CAEM,SAASiB,EAAgBF,GAC9B,OAAOd,EAAQ,GAAD,OAAIF,EAAJ,iBAAiBgB,EAAjB,4BAA4Cf,GAC3D,C,uNCqED,EAnGc,WAAO,IAAD,IACVkB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,WAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEAhB,QAAQC,IAAIc,GAEZ,IAAME,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAepD,OAbAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAaI,GACVd,MAAK,SAAAC,GACJmB,EAASnB,EAAS2B,MAClBV,EAAU,WACX,IACAhB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZe,EAAU,QACX,GAEJ,GAAE,IAEY,YAAXD,GAEA,SAAC,KAAD,CACEY,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,SAAS,IAIA,UAAXlB,GACK,SAACmB,EAAA,EAAD,IAEM,aAAXnB,GAEA,4BACE,SAAC,KAAD,CAAMoB,GAAId,EAAae,QAAvB,sBACA,yBAAU,OAALnB,QAAK,IAALA,OAAA,EAAAA,EAAOoB,SAAP,OAAgBpB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOqB,SAE5B,gBACEC,IACEtB,EAAMuB,YAAN,0CACuCvB,EAAMuB,aACzCC,EAENC,KAAU,OAALzB,QAAK,IAALA,OAAA,EAAAA,EAAOoB,SAAP,OAAgBpB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOqB,SAG9B,wCAAgBrB,EAAM0B,aAAaC,QAAQ,OAC3C,4BACE,sCACA,uBAAI3B,EAAM4B,eAGZ,4BACE,oCACA,wBACG5B,EAAM6B,OAAOC,KAAI,SAAAC,GAChB,OAAO,wBAAqBA,EAAKV,MAAjBU,EAAKV,KACtB,UAGL,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,6BAIN,SAAC,EAAAc,SAAD,CACEC,UACE,SAAC,KAAD,CACEvB,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,SAAS,IATf,UAaE,SAAC,KAAD,cApDR,CAyDD,C","sources":["api.ts","pages/Movie/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = 'f5947bee69b0eabce6ba631e79612468';\n\nexport async function getData(query: string) {\n  const response = await axios\n    .get(query)\n    .then(response => {\n      return response;\n    })\n    .catch(error => {\n      console.log(error.message);\n      throw new Error(error.message);\n    });\n  return response;\n}\n\nexport async function getTrendedMovies() {\n  const response = await getData(\n    `${BASE}trending/all/day?api_key=${KEY}&page=1`\n  );\n\n  return response;\n}\n\nexport function getMoviesByQuery(query: string) {\n  return getData(`${BASE}search/movie?api_key=${KEY}&query=${query}&page=1`);\n}\n\nexport function getMovieData(movieID: string) {\n  return getData(`${BASE}movie/${movieID}?api_key=${KEY}`);\n}\n\nexport function getMovieCast(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/reviews?api_key=${KEY}`);\n}\n","import React, { useState, useEffect, Suspense, useRef } from 'react';\nimport { Outlet, Link, useLocation } from 'react-router-dom';\nimport ErrorPage from '../ErrorPage/ErrorPage';\n\nimport { getMovieData } from '../../api';\n\nimport { useParams } from 'react-router-dom';\nimport placeholderPoster from './../../images/placeholder-poster.jpg';\nimport { Watch } from 'react-loader-spinner';\n\nconst Movie = () => {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('pending');\n  const [movie, setMovie] = useState([]);\n\n  console.log(movie);\n\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieData(movieId)\n      .then(response => {\n        setMovie(response.data);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        console.log(error);\n        setStatus('error');\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (status === 'pending') {\n    return (\n      <Watch\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"#4fa94d\"\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{}}\n        visible={true}\n      />\n    );\n  }\n  if (status === 'error') {\n    return <ErrorPage />;\n  }\n  if (status === 'resolved') {\n    return (\n      <div>\n        <Link to={backLinkHref.current}>Go back</Link>\n        <h2>{movie?.title || movie?.name}</h2>\n\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n              : placeholderPoster\n          }\n          alt={movie?.title || movie?.name}\n        />\n\n        <p>User Score: {movie.vote_average.toFixed(1)}</p>\n        <div>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n        </div>\n\n        <div>\n          <h3>Genres</h3>\n          <ul>\n            {movie.genres.map(item => {\n              return <li key={item.name}>{item.name}</li>;\n            })}\n          </ul>\n        </div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </nav>\n        <Suspense\n          fallback={\n            <Watch\n              height=\"80\"\n              width=\"80\"\n              radius=\"48\"\n              color=\"#4fa94d\"\n              ariaLabel=\"watch-loading\"\n              wrapperStyle={{}}\n              visible={true}\n            />\n          }\n        >\n          <Outlet />\n        </Suspense>\n      </div>\n    );\n  }\n};\n\nexport default Movie;\n"],"names":["BASE","KEY","getData","query","axios","then","response","catch","error","console","log","message","Error","getTrendedMovies","getMoviesByQuery","getMovieData","movieID","getMovieCast","getMovieReviews","movieId","useParams","useState","status","setStatus","movie","setMovie","location","useLocation","backLinkHref","useRef","state","from","useEffect","data","height","width","radius","color","ariaLabel","wrapperStyle","visible","ErrorPage","to","current","title","name","src","poster_path","placeholderPoster","alt","vote_average","toFixed","overview","genres","map","item","Suspense","fallback"],"sourceRoot":""}