{"version":3,"file":"static/js/685.25968e79.chunk.js","mappings":"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","sources":["api.ts","components/ErrorPage/ErrorPage.styled.tsx","components/ErrorPage/ErrorPage.tsx","pages/Cast/Cast.styled.tsx","pages/Cast/Cast.tsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = 'f5947bee69b0eabce6ba631e79612468';\n\nexport async function getData(query: string) {\n  try {\n    const response = await axios.get(query);\n    return response;\n  } catch (error: any) {\n    const errorData = { status: error.response.status, body: error.message };\n    throw new Error(JSON.stringify(errorData));\n  }\n}\n\nexport async function getTrendedMovies() {\n  return getData(`${BASE}trending/all/day?api_key=${KEY}&page=1`);\n}\n\nexport function getMoviesByQuery(query: string) {\n  return getData(`${BASE}search/movie?api_key=${KEY}&query=${query}&page=1`);\n}\n\nexport function getMovieData(movieID: string) {\n  return getData(`${BASE}movie/${movieID}?api_key=${KEY}`);\n}\n\nexport function getMovieCast(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movieID: string) {\n  return getData(`${BASE}movie/${movieID}/reviews?api_key=${KEY}`);\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  a {\n    width: fit-content;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './ErrorPage.styled';\nimport { Link } from 'react-router-dom';\nimport { IErrorPageProps } from '../../interfaces';\n\nconst ErrorPage = ({ errorMessage }: IErrorPageProps) => {\n  return (\n    <Container>\n      <h1>ERROR</h1>\n      <p>\n        Something happened. Go back to the <Link to=\"/\">Home page</Link>{' '}\n      </p>\n      <p>{errorMessage}</p>\n    </Container>\n  );\n};\n\nexport default ErrorPage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import React, { useEffect, useState } from 'react';\n\nimport { Container } from './Cast.styled';\nimport { useParams } from 'react-router';\nimport { getMovieCast } from '../../api';\nimport { Watch } from 'react-loader-spinner';\n\nimport placeholderImage from './../../images/placeholder-photo.jpg';\n\nimport { ICastItem, IError } from '../../interfaces';\n\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\nimport shortid from 'shortid';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [status, setStatus] = useState('pending');\n  const [error, setError] = useState<IError>({ status: null, body: '' });\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (movieId) {\n      getMovieCast(movieId)\n        .then(response => {\n          setCast(response.data.cast);\n\n          setStatus('resolved');\n        })\n        .catch((error: Error) => {\n          setError(JSON.parse(error.message));\n          setStatus('rejected');\n        });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (status === 'rejected') {\n    return <ErrorPage errorMessage={error.body} />;\n  }\n  if (status === 'pending') {\n    return (\n      <Watch\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"#4fa94d\"\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{}}\n        visible={true}\n      />\n    );\n  }\n  if (status === 'resolved') {\n    if (!cast.length) {\n      return (\n        <div>\n          <div>No cast found</div>\n        </div>\n      );\n    }\n    return (\n      <Container>\n        <h2>CAST</h2>\n        <ul>\n          {cast.map((item: ICastItem) => {\n            return (\n              <li key={shortid()}>\n                <img\n                  src={\n                    item.profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${item.profile_path}`\n                      : placeholderImage\n                  }\n                  width={200}\n                  alt={item.name || 'No name found'}\n                />\n                <p>{item.name || 'No name found'}</p>\n                <p>Character: {item.character || 'No character name found'}</p>\n              </li>\n            );\n          })}\n        </ul>\n      </Container>\n    );\n  }\n};\n\nexport default Cast as React.ComponentType;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["BASE","KEY","getData","query","axios","response","errorData","status","body","message","Error","JSON","stringify","getTrendedMovies","getMoviesByQuery","getMovieData","movieID","getMovieCast","getMovieReviews","Container","styled","errorMessage","to","movieId","useParams","useState","setStatus","error","setError","cast","setCast","useEffect","then","data","catch","parse","ErrorPage","height","width","radius","color","ariaLabel","wrapperStyle","visible","length","map","item","src","profile_path","alt","name","character","shortid","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","filter","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","number","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","id","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}